// <auto-generated />
using System;
using EntityLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EntityLayer.Tables.Brans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branss");
                });

            modelBuilder.Entity("EntityLayer.Tables.Doktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BransId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tckn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BransId");

                    b.ToTable("Doktors");
                });

            modelBuilder.Entity("EntityLayer.Tables.Hasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tckn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("durum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hastas");
                });

            modelBuilder.Entity("EntityLayer.Tables.Randevu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BransId")
                        .HasColumnType("int");

                    b.Property<string>("BransName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.Property<string>("DoktorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HastaId")
                        .HasColumnType("int");

                    b.Property<string>("HastaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Saat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Secim")
                        .HasColumnType("bit");

                    b.Property<string>("Tahlil")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BransId");

                    b.HasIndex("DoktorId");

                    b.HasIndex("HastaId");

                    b.ToTable("Randevus");
                });

            modelBuilder.Entity("EntityLayer.Tables.Saat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Saats");
                });

            modelBuilder.Entity("EntityLayer.Tables.Sekreter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tckn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sekreters");
                });

            modelBuilder.Entity("EntityLayer.Tables.Tarih", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tarihs");
                });

            modelBuilder.Entity("EntityLayer.Tables.TarihSaat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SaatId")
                        .HasColumnType("int");

                    b.Property<string>("SaatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TarihId")
                        .HasColumnType("int");

                    b.Property<string>("TarihName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SaatId");

                    b.HasIndex("TarihId");

                    b.ToTable("TarihSaats");
                });

            modelBuilder.Entity("EntityLayer.Tables.Doktor", b =>
                {
                    b.HasOne("EntityLayer.Tables.Brans", "Brans")
                        .WithMany("Doktors")
                        .HasForeignKey("BransId");

                    b.Navigation("Brans");
                });

            modelBuilder.Entity("EntityLayer.Tables.Randevu", b =>
                {
                    b.HasOne("EntityLayer.Tables.Brans", "Brans")
                        .WithMany("Randevus")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Tables.Doktor", "Doktor")
                        .WithMany()
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Tables.Hasta", "Hasta")
                        .WithMany("Randevus")
                        .HasForeignKey("HastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brans");

                    b.Navigation("Doktor");

                    b.Navigation("Hasta");
                });

            modelBuilder.Entity("EntityLayer.Tables.TarihSaat", b =>
                {
                    b.HasOne("EntityLayer.Tables.Saat", "Saat")
                        .WithMany("TarihSaats")
                        .HasForeignKey("SaatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Tables.Tarih", "Tarih")
                        .WithMany("TarihSaats")
                        .HasForeignKey("TarihId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Saat");

                    b.Navigation("Tarih");
                });

            modelBuilder.Entity("EntityLayer.Tables.Brans", b =>
                {
                    b.Navigation("Doktors");

                    b.Navigation("Randevus");
                });

            modelBuilder.Entity("EntityLayer.Tables.Hasta", b =>
                {
                    b.Navigation("Randevus");
                });

            modelBuilder.Entity("EntityLayer.Tables.Saat", b =>
                {
                    b.Navigation("TarihSaats");
                });

            modelBuilder.Entity("EntityLayer.Tables.Tarih", b =>
                {
                    b.Navigation("TarihSaats");
                });
#pragma warning restore 612, 618
        }
    }
}
